/*
 * WCI Automap API
 * <p>API documentation for the West Coast Informatics Automated Term Mapping Service.</p><p>For developer documentation and examples, see on GitHub <a href=\"https://github.com/westCoastInformatics/wci-automap-in-5-minutes\">WCI Automap in 5 Minutes</a></p>
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@westcoastinformatics.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package api.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import api.model.InputTerm;
import api.model.Tag;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import api.invoker.JSON;


/**
 * Represents a task to submit for processing, with included terms
 */
@JsonPropertyOrder({
  InputTask.JSON_PROPERTY_TERMS,
  InputTask.JSON_PROPERTY_CONTEXT,
  InputTask.JSON_PROPERTY_MIN_CONFIDENCE,
  InputTask.JSON_PROPERTY_TOP_ANSWER,
  InputTask.JSON_PROPERTY_AUDIT,
  InputTask.JSON_PROPERTY_TAGS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-07-16T18:58:01.210254-07:00[America/Los_Angeles]", comments = "Generator version: 7.5.0")
public class InputTask {
  public static final String JSON_PROPERTY_TERMS = "terms";
  private List<InputTerm> terms = new ArrayList<>();

  public static final String JSON_PROPERTY_CONTEXT = "context";
  private String context;

  public static final String JSON_PROPERTY_MIN_CONFIDENCE = "minConfidence";
  private Double minConfidence = 0.0d;

  public static final String JSON_PROPERTY_TOP_ANSWER = "topAnswer";
  private Boolean topAnswer = false;

  public static final String JSON_PROPERTY_AUDIT = "audit";
  private Boolean audit = true;

  public static final String JSON_PROPERTY_TAGS = "tags";
  private List<Tag> tags = new ArrayList<>();

  public InputTask() { 
  }

  public InputTask terms(List<InputTerm> terms) {
    this.terms = terms;
    return this;
  }

  public InputTask addTermsItem(InputTerm termsItem) {
    if (this.terms == null) {
      this.terms = new ArrayList<>();
    }
    this.terms.add(termsItem);
    return this;
  }

   /**
   * Collection of terms to be mapped
   * @return terms
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TERMS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<InputTerm> getTerms() {
    return terms;
  }


  @JsonProperty(JSON_PROPERTY_TERMS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTerms(List<InputTerm> terms) {
    this.terms = terms;
  }


  public InputTask context(String context) {
    this.context = context;
    return this;
  }

   /**
   * Additional textual context for disambiguation, including other text around the text of the terms passed in
   * @return context
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContext() {
    return context;
  }


  @JsonProperty(JSON_PROPERTY_CONTEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContext(String context) {
    this.context = context;
  }


  public InputTask minConfidence(Double minConfidence) {
    this.minConfidence = minConfidence;
    return this;
  }

   /**
   * Minimum confidence threshold for mapped results
   * @return minConfidence
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MIN_CONFIDENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getMinConfidence() {
    return minConfidence;
  }


  @JsonProperty(JSON_PROPERTY_MIN_CONFIDENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMinConfidence(Double minConfidence) {
    this.minConfidence = minConfidence;
  }


  public InputTask topAnswer(Boolean topAnswer) {
    this.topAnswer = topAnswer;
    return this;
  }

   /**
   * Indicator of whether to return the top mapped answer regardless of whether the minimum confidence threshold has been met
   * @return topAnswer
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOP_ANSWER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTopAnswer() {
    return topAnswer;
  }


  @JsonProperty(JSON_PROPERTY_TOP_ANSWER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTopAnswer(Boolean topAnswer) {
    this.topAnswer = topAnswer;
  }


  public InputTask audit(Boolean audit) {
    this.audit = audit;
    return this;
  }

   /**
   * Indicator of whether to use auditing (automatically false if configuration does not persist outputs)
   * @return audit
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUDIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAudit() {
    return audit;
  }


  @JsonProperty(JSON_PROPERTY_AUDIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAudit(Boolean audit) {
    this.audit = audit;
  }


  public InputTask tags(List<Tag> tags) {
    this.tags = tags;
    return this;
  }

  public InputTask addTagsItem(Tag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * List of key/value tags
   * @return tags
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Tag> getTags() {
    return tags;
  }


  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTags(List<Tag> tags) {
    this.tags = tags;
  }


  /**
   * Return true if this InputTask object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InputTask inputTask = (InputTask) o;
    return Objects.equals(this.terms, inputTask.terms) &&
        Objects.equals(this.context, inputTask.context) &&
        Objects.equals(this.minConfidence, inputTask.minConfidence) &&
        Objects.equals(this.topAnswer, inputTask.topAnswer) &&
        Objects.equals(this.audit, inputTask.audit) &&
        Objects.equals(this.tags, inputTask.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(terms, context, minConfidence, topAnswer, audit, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InputTask {\n");
    sb.append("    terms: ").append(toIndentedString(terms)).append("\n");
    sb.append("    context: ").append(toIndentedString(context)).append("\n");
    sb.append("    minConfidence: ").append(toIndentedString(minConfidence)).append("\n");
    sb.append("    topAnswer: ").append(toIndentedString(topAnswer)).append("\n");
    sb.append("    audit: ").append(toIndentedString(audit)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

